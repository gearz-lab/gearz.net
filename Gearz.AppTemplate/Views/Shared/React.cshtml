@using Newtonsoft.Json
@model Gearz.Models.ApplicationClientModel
<script>
    window.stores = {};
    window.stores.appState = @(Html.Raw(JsonHelper.ToJson(this.Model.AppState)));
    window.stores.appData = @(Html.Raw(JsonHelper.ToJson(this.Model.AppData)));
    @{
        int appMetadataVersion;
        var cookie = this.Request.Cookies["gzAMV"]; // application metadata versions
        if (cookie == null || !int.TryParse(cookie.Value, out appMetadataVersion) || appMetadataVersion < 1)
        {
            // this cookie indicates what metadata the client has cached,
            // so that it does not need to be sent again
            // TODO: the needed metadata must be indicated by the controller, using the full version name of a registered version
            //      gearzContext.RequireMetadata("my-app-id en-US v1.0.0")
            // TODO: versions can be registered statically in the application start, or dinamically in a database (through IAppVersionProvider)
            //      use sematic versioning for version numbers, so that, once a version is released, the metadata can never change
            this.Response.Cookies.Set(new HttpCookie(
                "gzAMV",
                "my-app-id en-US v0.1.0, my-mod-id en-US v0.1.0")
                {
                    Expires = DateTime.MaxValue
                });
            <text>
    window.stores.appMeta = @Html.Raw(JsonHelper.ToJson(this.Model.AppMeta));
            </text>
        }
    }
</script>
@{
    const string appComponentName = "Application";
    const string appElementId = "rootComponent";
}
@if (!FLAGS.DEBUG)
{
    @:@Html.React(appComponentName, this.Model, "div", appElementId)
}
else
{
    <div id="@appElementId"></div>
}
<script>
    function Render() {
        React.render(
            React.createElement(@(appComponentName), {
                appState: window.stores.appState,
                appMeta: window.stores.appMeta,
                appData: window.stores.appData
            }),
            document.getElementById("@(appElementId)"));
        }
        Render();
</script>